services:
  db:
    image: mongo:latest
    container_name: mongodb_container
    volumes:
      - ./db:/data/db
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    networks:
      - app-network

  node:
    image: node:latest
    container_name: node_api_container
    working_dir: /usr/src/app
    volumes:
      - ./node:/usr/src/app
    ports:
      - "3000:3000"
    command: sh -c "npm install && node index.js"
    environment:
      PYTHON_API_URL: http://python_scraper:8000
    networks:
      - app-network
    depends_on:
      - python_scraper  # Waiting for the Python scraper to be ready

  python_scraper:
    image: python:3.10
    container_name: python_scraper_container
    working_dir: /usr/src/app
    volumes:
      - ./python:/usr/src/app
    ports:
      - "8000:8000"
    command: sh -c "pip install -r requirements.txt && python scrapper.py"
    environment:
      MONGO_URI: mongodb://root:example@db:27017/admin
    networks:
      - app-network
    depends_on:
      - db  # Ensure MongoDB is up before Python scraper starts

  python_socketio:
    image: python:3.10
    container_name: python_socketio_container
    working_dir: /usr/src/app/socketio
    volumes:
      - ./python_socketio:/usr/src/app/socketio
    command: sh -c "pip install --upgrade pip setuptools && pip install -r requirements.txt && python tuner.py"
    environment:
      NODEJS_URL: http://node:3000/python  # Node.js server URL
    networks:
      - app-network
    depends_on:
      - node  # Only depends on Node.js

networks:
  app-network:
    driver: bridge

    